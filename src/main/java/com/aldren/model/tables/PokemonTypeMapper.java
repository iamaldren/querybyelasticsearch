/*
 * This file is generated by jOOQ.
 */
package com.aldren.model.tables;


import com.aldren.model.Aldren;
import com.aldren.model.Indexes;
import com.aldren.model.Keys;
import com.aldren.model.tables.records.PokemonTypeMapperRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PokemonTypeMapper extends TableImpl<PokemonTypeMapperRecord> {

    private static final long serialVersionUID = -1092768326;

    /**
     * The reference instance of <code>aldren.pokemon_type_mapper</code>
     */
    public static final PokemonTypeMapper POKEMON_TYPE_MAPPER = new PokemonTypeMapper();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PokemonTypeMapperRecord> getRecordType() {
        return PokemonTypeMapperRecord.class;
    }

    /**
     * The column <code>aldren.pokemon_type_mapper.pokemon_id</code>.
     */
    public final TableField<PokemonTypeMapperRecord, Integer> POKEMON_ID = createField("pokemon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>aldren.pokemon_type_mapper.type_id</code>.
     */
    public final TableField<PokemonTypeMapperRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>aldren.pokemon_type_mapper</code> table reference
     */
    public PokemonTypeMapper() {
        this(DSL.name("pokemon_type_mapper"), null);
    }

    /**
     * Create an aliased <code>aldren.pokemon_type_mapper</code> table reference
     */
    public PokemonTypeMapper(String alias) {
        this(DSL.name(alias), POKEMON_TYPE_MAPPER);
    }

    /**
     * Create an aliased <code>aldren.pokemon_type_mapper</code> table reference
     */
    public PokemonTypeMapper(Name alias) {
        this(alias, POKEMON_TYPE_MAPPER);
    }

    private PokemonTypeMapper(Name alias, Table<PokemonTypeMapperRecord> aliased) {
        this(alias, aliased, null);
    }

    private PokemonTypeMapper(Name alias, Table<PokemonTypeMapperRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PokemonTypeMapper(Table<O> child, ForeignKey<O, PokemonTypeMapperRecord> key) {
        super(child, key, POKEMON_TYPE_MAPPER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Aldren.ALDREN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.POKEMON_TYPE_MAPPER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PokemonTypeMapperRecord> getPrimaryKey() {
        return Keys.KEY_POKEMON_TYPE_MAPPER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PokemonTypeMapperRecord>> getKeys() {
        return Arrays.<UniqueKey<PokemonTypeMapperRecord>>asList(Keys.KEY_POKEMON_TYPE_MAPPER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PokemonTypeMapper as(String alias) {
        return new PokemonTypeMapper(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PokemonTypeMapper as(Name alias) {
        return new PokemonTypeMapper(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PokemonTypeMapper rename(String name) {
        return new PokemonTypeMapper(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PokemonTypeMapper rename(Name name) {
        return new PokemonTypeMapper(name, null);
    }
}
